#name: Deploy to AWS
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  backend:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Login to GitHub Container Registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Build Docker Image
#        run: |
#          docker build -t ghcr.io/${{ github.repository_owner }}/spring-boot-app:latest .
#          docker push ghcr.io/${{ github.repository_owner }}/spring-boot-app:latest
#
#      - name: Deploy to EC2
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_REGION }}
#        run: |
#          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_ID }} << 'EOF'
#          docker pull ghcr.io/${{ github.repository_owner }}/spring-boot-app:latest
#          docker stop spring-boot-app || true
#          docker rm spring-boot-app || true
#          docker run -d --name spring-boot-app -p 8080:8080 ghcr.io/${{ github.repository_owner }}/spring-boot-app:latest
#          EOF